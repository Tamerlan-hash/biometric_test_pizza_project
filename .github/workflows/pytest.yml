name: Django CI

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      DB_ENGINE: postgresql+asyncpg
      POSTGRES_HOST: test_pizza_db
      POSTGRES_PORT: 5433
      POSTGRES_DB: test_pizza_db
      POSTGRES_USER: test_pizza_user
      POSTGRES_PASSWORD: 7L357Ugyfds231

      ENV: test

    services:
      test_pizza_db:
        image: postgres:14.2-alpine
        ports:
          - "5433:5432"
        env:
          POSTGRES_HOST: test_pizza_db
          POSTGRES_PORT: 5433
          POSTGRES_DB: test_pizza_db
          POSTGRES_USER: test_pizza_user
          POSTGRES_PASSWORD: 7L357Ugyfds231

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: 3.10.6

    - name: Install poetry
      uses: snok/install-poetry@v1.2.0
      with:
        version: 1.1.8
        virtualenvs-create: true
        virtualenvs-in-project: true
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v2
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
    - name: Install dependencies
      run: poetry install
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'

    - name: Run Tests
      run: |
        source .venv/bin/activate
        pytest